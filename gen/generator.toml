[general]
library_name = "libigraph"
output_file_path = "./LibIGraph.jl"
module_name = "LibIGraph"
jll_pkg_name = "igraph_jll"
export_symbol_prefixes = ["igraph"]

output_ignorelist = [
    # these mostly depend on macros
    "IGRAPH_DEPRECATED_EXPORT",
    "IGRAPH_DEPRECATED_NO_EXPORT",
    "IGRAPH_PRIVATE_EXPORT",
    "igraph_Calloc",
    "igraph_Realloc",
    "igraph_Free",
    "IGRAPH_FILE_BASENAME",
    "GCC_VERSION_MAJOR",
    "IGRAPH_PRId",
    "IGRAPH_PRIu",
    "IGRAPH_INTEGER_MAX",
    "IGRAPH_INTEGER_MIN",
    "IGRAPH_UINT_MAX",
    "IGRAPH_UINT_MIN",
    "IGRAPH_VCOUNT_MAX",
    "IGRAPH_ECOUNT_MAX",
    "IGRAPH_INFINITY",
    "IGRAPH_POSINFINITY",
    "IGRAPH_NEGINFINITY",
    "IGRAPH_NAN",
    "IGRAPH_BOOL_TYPE",
    "CONCAT2",
    "CONCAT3",
    "CONCAT4",
    "CONCAT5",
    "PRINTFUNC",
    "SNPRINTFUNC",
    "FPRINTFUNC_ALIGNED",
    "FPRINTFUNC",
    "FUNCTION",
    "TYPE",
    "EQ",
    "SUM",
    "DIFF",
    "PROD",
    "DIV",
    "SQ",
    "IGRAPH_VECTOR_NULL",
    "IGRAPH_MATRIX_NULL",
    "IGRAPH_POPCOUNT",
    "IGRAPH_CLZ",
    "IGRAPH_CTZ",
    "IGRAPH_DQUEUE_NULL",
    "IGRAPH_STACK_NULL",
    "IGRAPH_HEAP_NULL",
    "IGRAPH_STRVECTOR_NULL",
    "INTERNAL_FUNCTION",
    "IGRAPH_VECTOR_PTR_NULL",
    "EXTRA_TYPE_FIELDS",
]

# The raise errors as missing implementation in Clang.jl
#"igraph_error_handler_ignore",
#"igraph_error_handler_printignore",
#"igraph_warning_handler_ignore",
#"igraph_warning_handler_print",
#"igraph_progress_handler_stderr",
#"igraph_status_handler_stderr",